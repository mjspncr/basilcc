# basil grammar

start -> rule-seq-opt

rule-seq-opt ->
rule-seq-opt -> rule-seq

rule-seq -> rule
rule-seq -> rule-seq rule

rule: rule -> rule-name-opt > symbol ARROW symbol-seq-opt >

rule-name-opt ->
rule-name-opt -> rule-name *

rule_name: rule-name -> IDENT COLON

symbol-seq-opt ->
symbol-seq-opt -> symbol-seq

symbol_seq_1: symbol-seq -> symbol
symbol_seq_2: symbol-seq -> symbol-seq symbol

# will add symbol on reduction so keep follow symbols sticky, only reduce if valid tokens follow
symbol: symbol <* -> IDENT attrib-seq

attrib_seq_1: attrib-seq -> 
attrib_seq_2: attrib-seq -> attrib-seq NUMBER
attrib_seq_3: attrib-seq -> attrib-seq LT
attrib_seq_4: attrib-seq -> attrib-seq STAR
attrib_seq_5: attrib-seq -> attrib-seq PLUS  bang-seq-opt
attrib_seq_6: attrib-seq -> attrib-seq CARET bang-seq-opt
attrib_seq_7: attrib-seq -> attrib-seq GT    bang-seq-opt

bang-seq-opt -> 
bang-seq-opt -> bang-seq

bang_seq_1: bang-seq -> BANG
bang_seq_2: bang-seq -> bang-seq BANG

# try discarding max of 1 token on syntax error
%recover discard 1
