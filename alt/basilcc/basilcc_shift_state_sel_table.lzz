// basilcc shift state sel table

namespace basilcc {

class ShiftStateSel;

typedef std::vector<ShiftState> ShiftStateVector;
typedef std::vector<ShiftStateSel *> ShiftStateSelVector;

class ShiftStateSelTable {
  public:
    ShiftStateSelTable()
    {}

    ~ShiftStateSelTable()
    {
        delete_objects(_shift_state_sels);
    }

    // get shift state sel from shift states
    ShiftStateSel const *get_shift_state_sel(ShiftStateVector &shift_states)
    {
        // always unique 
        return *_shift_state_sels.insert(_shift_state_sels.end(), new ShiftStateSel(int(_shift_state_sels.size()), shift_states));
    }

    // get all shift state sels
    inline ShiftStateSelVector const &get_shift_state_sels() const
    {
        return _shift_state_sels;
    }

  private:
    ShiftStateSelVector _shift_state_sels;
};

} // basilcc

#hdr
#include <basilcc_shift_state.h>
#include <vector>
#end

#src
#include <basilcc_shift_state_sel.h>
#include <basilcc_util.h>
#end
