namespace basilcc
{
  // error recover stategy type
  enum StrategyType
  {
    STRATEGY_INSERT,
    STRATEGY_DISCARD,
  }

  class Strategy
  {
  public:
    Strategy ()
    {}
    virtual ~ Strategy ()
    {}
    virtual StrategyType getType () const = 0;
  }

  class InsertStrategy : public Strategy
  {
  public:
    InsertStrategy (SymbolPtr token, std::string const & lexeme)
      : token (token), lexeme (lexeme)
    {}
    ~ InsertStrategy ()
    {}
    StrategyType getType () const
    {
      return STRATEGY_INSERT;
    }
    inline SymbolPtr getToken () const
    {
      return token;
    }
    inline std::string const & getLexeme () const
    {
      return lexeme;
    }
  private:
    // insert this token
    SymbolPtr token;
    // with this lexeme (optional)
    std::string lexeme;
  }

  class DiscardStrategy : public Strategy
  {
  public:
    DiscardStrategy (int num)
      : num (num)
    {}
    ~ DiscardStrategy ()
    {}
    StrategyType getType () const
    {
      return STRATEGY_DISCARD;
    }
    inline int getNumber () const
    {
      return num;
    }
  private:
    // discard up to this number of tokens
    int num;
  }
}

#hdr
#include <basilcc/symbol_ptr.h>
#include <string>
#end
