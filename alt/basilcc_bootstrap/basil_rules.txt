# rule grammar
### maybe "Node" should be append to all node names, so don't need to do here...

[RootNode/void]
start -> rule-seq

# rule
rule-seq ->
[RuleSeqNode]
rule-seq -> rule-seq rule

[RuleNode]
rule -> node-type symbol ARROW symbol-seq >

# node
node-type ->
[NodeTypeNode]
node-type -> LBRACK IDENT node-qualifier RBRACK

node-qualifier ->
[NodeQualifierNode]
node-qualifier -> SLASH ident-opt

ident-opt ->
ident-opt -> IDENT

# symbol
symbol-seq ->
[SymbolSeqNode]
symbol-seq -> symbol-seq symbol

[SymbolNode]
symbol <* -> IDENT attrib-seq

# attributes
[AttribSeq1Node/Attributes]
attrib-seq ->
[AttribSeq2Node/Attributes]
attrib-seq -> attrib-seq NUMBER
[AttribSeq3Node/Attributes]
attrib-seq -> attrib-seq LT
[AttribSeq4Node/Attributes]
attrib-seq -> attrib-seq STAR
[AttribSeq5Node/Attributes]
attrib-seq -> attrib-seq PLUS bang-seq
[AttribSeq6Node/Attributes]
attrib-seq -> attrib-seq CARET bang-seq
[AttribSeq7Node/Attributes]
attrib-seq -> attrib-seq GT bang-seq

[BangSeq1Node/int]
bang-seq ->
[BangSeq2Node/int]
bang-seq -> bang-seq BANG
