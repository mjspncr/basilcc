namespace basilcc
{
  // syntax error recover stategy
  enum RecoverStrategyType
  {
    // insert one token
    STRATEGY_INSERT,
    // discard up to some number of tokens
    STRATEGY_DISCARD,
  };

  class RecoverStrategy
  {
  public:
    RecoverStrategy ()
    {}
    virtual ~ RecoverStrategy ()
    {}
    virtual RecoverStrategyType getType () const = 0;
  }

  // insert a token
  struct InsertStrategy : public RecoverStrategy
  {
  public:
    InsertStrategy (SymbolPtr token)
      : token (token)
    {}
    ~ InsertStrategy ()
    {}
    RecoverStrategyType getType () const
    {
      return STRATEGY_INSERT;
    }
    // get token to insert
    inline SymbolPtr getToken () const
    {
      return token;
    }
  private:
    SymbolPtr token;
  }

  // discard up to some number of tokens
  class DiscardStrategy : public RecoverStrategy
  {
  public:
    DiscardStrategy (int max_num)
      : max_num (max_num)
    {}
    ~ DiscardStrategy ()
    {}
    RecoverStrategyType getType () const
    {
      return STRATEGY_DISCARD;
    }
    // get max number of tokens to discard
    inline int getMaxNumber () const
    {
      return max_num;
    }
  private:
    int max_num;
  }
}

#hdr
#include <basilcc/symbol_ptr.h>
#end
