namespace basilcc
{
  class BasilCC;

  // get shift and reduce actions
  ActionPtr getShiftAction (BasilCC & cc, StatePtr state)
  {
    return cc.getTable <ActionTable> ().getShiftAction (state);
  }
  ActionPtr getReduceAction (BasilCC & cc, RulePtr rule, SymbolPtr shortcut, bool accept)
  {
    return cc.getTable <ActionTable> ().getReduceAction (rule, shortcut, accept);
  }

  // get all actions
  ActionPtrVector const & getActions (BasilCC & cc)
  {
    return cc.getTable <ActionTable> ().getActions ();
  }
}

using namespace basilcc;

namespace
{
  class ActionTable : public Table
  {
  public:
    ActionTable (BasilCC & cc)
    {}
    ~ ActionTable ()
    {
      deleteObjects (m_actions.begin (), m_actions.end ());
    }

    // get shift action from state
    ActionPtr getShiftAction (StatePtr state)
    {
      m_action_trie.push (size_t (state));
      ActionPtr & action = m_action_trie.commit (0);
      if (! action)
      {
        action = new ShiftAction (m_actions.size (), state);
        m_actions.push_back (action);
      }
      return action;
    }

    // get reduce action from components
    ActionPtr getReduceAction (RulePtr rule, SymbolPtr shortcut, bool accept)
    {
      m_action_trie.push (size_t (rule));
      m_action_trie.push (size_t (shortcut));
      m_action_trie.push (accept ? 1 : 0);
      ActionPtr & action = m_action_trie.commit (0);
      if (! action)
      {
        action = new ReduceAction (m_actions.size (), rule, shortcut, accept);
        m_actions.push_back (action);
      }
      return action;
    }

    // get all actions
    inline ActionPtrVector const & getActions () const
    {
      return m_actions;
    }

    enum { TABLE = TABLE_ACTION }
  private:
    ActionPtrTrie m_action_trie;
    ActionPtrVector m_actions;
  }
}

#hdr
#include <basilcc_action_ptr_vector.h>
#include <basilcc_rule_ptr.h>
#include <basilcc_state_ptr.h>
#include <basilcc_symbol_ptr.h>
#end

#src
#include <basilcc_action.h>
#include <basilcc_action_ptr_trie.h>
#include <basilcc_basilcc.h>
#include <basilcc_table.h>
#include <basilcc_util.h>
#end
