namespace basilcx {

class ShiftSel
{
  public:
    // steals shifts
    ShiftSel(ShiftVector &shifts)
        : _num(-1)
    {
        _shifts.swap(shifts); // steals shifts
    }

    ~ShiftSel ()
    {}
    
    inline ShiftVector const &get_shifts() const
    {
        return _shifts;
    }

    // get shift state from symbol number
    State *get_shift_state(Symbol *symbol) const
    {
        return basilcx::get_shift_state(_shifts, symbol);
    }

    int _num;
  private:
    ShiftVector _shifts; // ordered
};

// true if a < b
bool operator<(ShiftSel const &a, ShiftSel const &b)
{
    return a.get_shifts() < b.get_shifts();
}

} // basilcx

#hdr
#include <basilcx_shift.h>
#end

#src
#end
